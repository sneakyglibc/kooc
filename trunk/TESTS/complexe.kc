@import "complexe.kh"

@implementation MyModule
{
	int add(int a, int b)
	{
		return (a + b);
	}

	float add(float a, float b)
	{
		return (a + b);
	}
}

@implementation MyClass
{
/*
	void toto(int a, int b);
	{
		printf("%d %d\n", a, b);
	}
*/

/*
	@member void toto(char *s)
	{
		printf("%s\n", s);
	}
*/

	@member int aff(int a)
	{
		printf("%d\n", a);
		return a;
	}

	@member int aff(float a)
	{
		printf("%f\n", a);
		return 42.0;
	}

	@member int aff(double a)
	{
		printf("%f\n", a);
		return 41.0;
	}
}

int	main()
{
	int c;
	struct MyClass *test = [MyClass new];

 	@!(int)[MyModule.result] = @!(int)[MyModule add :42 :21];
	@!(float)[MyModule.result] = @!(float)[MyModule add :42.21 :21.42];
	@!(int)[test aff :@!(int)[MyModule.result]];
	@!(int)[MyModule.result] += @!(int)[MyModule add :@!(int)[MyModule add :8 :5] :5];
	[test aff :@!(float)[MyModule.result]];
	@!(int)[test aff :@!(int)[MyModule.result]];
	return (0);
}